
/**
  * Memory of 8 registers, each 16 bit-wide. Out holds the value
  * stored at the memory location specified by address. If load==1, then 
  * the in value is loaded into the memory location specified by address 
  * (the loaded value will be emitted to out from the next time step onward).
  */

CHIP RAM8 
{
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in = load, sel = address, a = dmuxout0, b = dmuxout1, c = dmuxout2,
            d = dmuxout3, e = dmuxout4, f = dmuxout5, g = dmuxout6, h = dmuxout7);

    Register  (in = in, load = dmuxout0, out = reg0);
    Register  (in = in, load = dmuxout1, out = reg1);
    Register  (in = in, load = dmuxout2, out = reg2);
    Register  (in = in, load = dmuxout3, out = reg3);
    Register  (in = in, load = dmuxout4, out = reg4);
    Register  (in = in, load = dmuxout5, out = reg5);
    Register  (in = in, load = dmuxout6, out = reg6);
    Register  (in = in, load = dmuxout7, out = reg7);

    Mux8Way16 (a = reg0, b = reg1, c = reg2, d = reg3, e = reg4, f = reg5, g = reg6, h = reg7, sel = address, out = out);
   
}